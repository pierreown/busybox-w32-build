name: Build BusyBox-w32

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:trixie
    strategy:
      # 即使一个构建失败，其他构建也会继续
      fail-fast: true
      matrix:
        # 定义要并行构建的配置矩阵
        config:
          - name: mingw64
            defconfig: mingw64_defconfig
            output: busybox-mingw64.exe
            depends_on: gcc-mingw-w64-x86-64
          - name: mingw64u
            defconfig: mingw64u_defconfig
            output: busybox-mingw64u.exe
            depends_on: gcc-mingw-w64-x86-64
          - name: ucrt64
            defconfig: ucrt64_defconfig
            output: busybox-ucrt64.exe
            base_defconfig: mingw64_defconfig
            cross_compiler: "x86_64-w64-mingw32ucrt-"
            depends_on: gcc-mingw-w64-ucrt64
          - name: ucrt64u
            defconfig: ucrt64u_defconfig
            output: busybox-ucrt64u.exe
            base_defconfig: mingw64u_defconfig
            cross_compiler: "x86_64-w64-mingw32ucrt-"
            depends_on: gcc-mingw-w64-ucrt64

    steps:
      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y make gcc git bzip2
          [ -n "${{ matrix.config.depends_on }}" ] && apt-get install -y ${{ matrix.config.depends_on }}

      - name: Clone repository
        run: |
          git clone --depth 1 -b ${{ github.ref_name }} https://github.com/rmyorston/busybox-w32.git

      - name: Create custom config for UCRT64 variants
        if: matrix.config.base_defconfig != ''
        run: |
          cd busybox-w32
          sed 's/CROSS_COMPILER_PREFIX="x86_64-w64-mingw32-"/CROSS_COMPILER_PREFIX="${{ matrix.config.cross_compiler }}"/' configs/${{ matrix.config.base_defconfig }} > configs/${{ matrix.config.defconfig }}

      - name: Build ${{ matrix.config.name }} variant
        run: |
          cd busybox-w32
          make ${{ matrix.config.defconfig }}
          make -j$(nproc)
          mv busybox.exe ${{ matrix.config.output }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.output }}
          path: busybox-w32/${{ matrix.config.output }}

  # 收集所有构建产物并创建发布
  release:
    needs: build # 等待所有构建任务完成
    runs-on: ubuntu-latest
    steps:
      - name: Create release directory
        run: mkdir -p /tmp/release

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp/release

      - name: Clone repository from release branch
        run: |
          git clone --depth 1 -b ${{ github.ref_name }} https://github.com/rmyorston/busybox-w32.git
          [ -f busybox-w32/LICENSE ] && cp busybox-w32/LICENSE /tmp/release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          body: |
            Auto Build BusyBox-w32
            Branch: ${{ github.ref_name }}
            Build Time: ${{ github.event.head_commit.timestamp }}
          files: |
            /tmp/release/*.exe
            /tmp/release/LICENSE
          draft: false
          prerelease: false
